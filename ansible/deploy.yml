---
- hosts: localhost
  connection: local
  tasks:
  - name: Verify all params passed
    fail:
      msg: |
        **** INCORRECT PARAMETERS ****

        USAGE EXAMPLE:
        ./run_this.sh -e deploy_host='mtn-sea1' -e app_version='v11'

        {% if deploy_host is not defined %}
        'Need deploy_host specified'
        {% endif %}
        {%  if app_version is not defined %}
        'Need app_version specified'
        {% endif %}
        **********************************
    when: deploy_host is undefined
          or
          deploy_host is none
          or
          deploy_host|trim == ''
          or
          app_version is undefined
          or
          app_version is none
          or
          app_version|trim == ''

- hosts: 
    - "{{ deploy_host }}"
  sudo: true
  tasks:


  - name: Verify ansible version
    fail: 
      msg: "{{ item }}"
    with_items:
      - "Ansible version required: {{ ansible_ver_required }}"
      - "Current ansible version:  {{ ansible_version.full }}"
    when: ansible_version.full | version_compare( min_ansible_version, '<' )

  - name: set delete vars
    set_fact:
      present: absent
      started: absent
      reloaded: absent
    when: delete_containers

  #-------------------------
  # install prereqs
  #-------------------------
  - name: apt install python-pip
    apt:
      name: python-pip
      state: present

  - name: pip install docker-py
    pip:
      name: docker-py==1.1.0
      state: present
      executable: pip2
  #------------------------------
  # fail if pull not succesfull
  #------------------------------
  - name: pull app from registry
    shell: |
      docker pull "{{ registry_url }}/{{ app_name }}:{{ app_version }}"
    when: not delete_containers

  #-------------------------
  # stop needed containers first
  #-------------------------

  - name: stop "{{ app_name }}"
    docker:
      name: "{{ app_name }}"
      state: absent
      image: scratch

    #-------------------------
    # docker pull
    #-------------------------


  - name: deploy "{{ app_name }}"
    docker:
      name: "{{ app_name }}"
      state: "{{ started }}"
      image: "{{ app_image }}"
      command: perl /opt/fauxdelio/fauxdelio.pl -d 1 -c 100
      expose:
        - 2019
      ports:
        - "2019:2019"
      restart_policy: always
      env: "{{ env_vars }}"
